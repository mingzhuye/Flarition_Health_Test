subset2 = merge(patients2, administration[, c(1, 4)], by.x = "patient_id", by.y = "patient_id")
subset2[with(subset2, order(subset2[,1], subset2[, 7])), ] ->test
View(test)
unique(demographics2$patient_id)
for(i in nrow(demographics2)){
if((demographics2[i, 2]=="female"&demographics2[i, 4]=="NON_WHITE")|(demographics2[i, 2]=="male"&demographics2[i, 4]=="NON_WHITE" & demographics2[i, 3]>=70)){
demographics2[i, 5] = "High_Risk"
}
else if((demographics2[i, 2]=="female"&demographics2[i, 4]=="WHITE" & demographics2[i, 3]>=75)|(demographics2[i, 2]=="male"&demographics2[i, 4]=="NON_WHITE" & demographics2[i, 3]<70)){
demographics2[i, 5] = "Medium_Risk"
}
else if((demographics2[i, 2]=="female"&demographics2[i, 4]=="WHITE" & demographics2[i, 3]<75)|(demographics2[i, 2]=="male"&demographics2[i, 4]=="WHITE") ){
demographics2[i, 5] = "Low_Risk"
}
}
for(i in 1:nrow(demographics2)){
if((demographics2[i, 2]=="female"&demographics2[i, 4]=="NON_WHITE")|(demographics2[i, 2]=="male"&demographics2[i, 4]=="NON_WHITE" & demographics2[i, 3]>=70)){
demographics2[i, 5] = "High_Risk"
}
else if((demographics2[i, 2]=="female"&demographics2[i, 4]=="WHITE" & demographics2[i, 3]>=75)|(demographics2[i, 2]=="male"&demographics2[i, 4]=="NON_WHITE" & demographics2[i, 3]<70)){
demographics2[i, 5] = "Medium_Risk"
}
else if((demographics2[i, 2]=="female"&demographics2[i, 4]=="WHITE" & demographics2[i, 3]<75)|(demographics2[i, 2]=="male"&demographics2[i, 4]=="WHITE") ){
demographics2[i, 5] = "Low_Risk"
}
}
View(demographics)
table(demographics2$V5)
30 + 39 + 24
for(i in 1:nrow(demographics2)){
if((demographics2[i, 2]=="female"&demographics2[i, 4]=="NON_WHITE")|(demographics2[i, 2]=="male"&demographics2[i, 4]=="NON_WHITE" & demographics2[i, 3]>=70)|(demographics2[i, 2]=="unknown"&demographics2[i, 4]=="NON_WHITE" & demographics2[i, 3]>=70)){
demographics2[i, 5] = "High_Risk"
}
else if((demographics2[i, 2]=="female"&demographics2[i, 4]=="WHITE" & demographics2[i, 3]>=75)|(demographics2[i, 2]=="male"&demographics2[i, 4]=="NON_WHITE" & demographics2[i, 3]<70)){
demographics2[i, 5] = "Medium_Risk"
}
else if((demographics2[i, 2]=="female"&demographics2[i, 4]=="WHITE" & demographics2[i, 3]<75)|(demographics2[i, 2]=="male"&demographics2[i, 4]=="WHITE")|(demographics2[i, 2]=="unknown"&demographics2[i, 4]=="WHITE" & demographics2[i, 3]<75) ){
demographics2[i, 5] = "Low_Risk"
}
else if((demographics2[i, 2]=="unknown"&demographics2[i, 4]=="WHITE" & demographics2[i, 3]>=75)){
demographics2[i, 5] = "Medium_to_Low_Risk"
}
else if((demographics2[i, 2]=="unknown"&demographics2[i, 4]=="NON_WHITE" & demographics2[i, 3]<70)){
demographics2[i, 5] = "High_to_Medium_Risk"
}
}
View(demographics2)
View(subset2)
View(subset1)
View(subset2)
unique(subset1$patient_id)
length(unique(subset1$patient_id))
subset1[duplicated(subset1)]
subset1[duplicated(subset1), ]
subset1[duplicated(subset1$patient_id), ]
nivolumab = subset1
table(administration$drug_name)
subset(administration, administration$administered_date>="2012-01-01" & administration$administered_date<="2016-12-31" &administration$drug_name=="axitinib" ) ->axitinib
subset(administration, administration$drug_name=="axitinib" ) ->axitinib
View(axitinib)
View(axitinib)
subset(administration, administration$drug_name=="nivolumab" ) ->nivolumab
subset(administration, administration$drug_name=="bevacizumab" ) -> bevacizumab
subset(administration, administration$drug_name=="erlotinib hcl" ) -> erlotinibhcl
View(bevacizumab )
View(erlotinibhcl)
View(nivolumab )
nivolumab[,6] = unsplit(strsplit(nivolumab[,4], "-"))[1:2]
?strsplit
nivolumab[,6] = format(nivolumab[, 4], "%Y/%m")
View(nivolumab)
plot(nivolumab$V6)
table(nivolumab$V6)
test = data.frame(table(nivolumab$V6))
View(test)
plot(test$Var1, test$Freq)
hist(test$Var1)
hist(test$Freq)
nivolumab[,6] = format(nivolumab[, 4], "%Y")
test = data.frame(table(nivolumab$V6))
View(test)
str(administration)
plot(test$Var1, test$Freq)
View(administration)
plot(test$Var1, test$Freq, type='l')
plot(test$Var1, test$Freq, type='s')
plot(test$Var1, test$Freq, type='h')
plot(test$Var1, test$Freq, type='h')
administration[,6] = format(administration[, 4], "%Y")
View(administration)
str(administration)
administration[,6] = factor(administration[,6 ])
str(administration)
p<-ggplot(administration, aes(x=V6, y=sum(V6), group=drug_name)) +
geom_line(aes(color=drug_name))+
geom_point(aes(color=drug_name))
p
library9
library(ggplot2)
p<-ggplot(administration, aes(x=V6, y=sum(V6), group=drug_name)) +
geom_line(aes(color=drug_name))+
geom_point(aes(color=drug_name))
p
table(administration$drug_name, administration$V6)
data.frame(table(administration$drug_name, administration$V6) ) ->test
View(test)
colnames(test) = c('drug_name', 'year', 'Freq')
p<-ggplot(test, aes(x=year, y=Freq, group=drug_name)) +
geom_line(aes(color=drug_name))+
geom_point(aes(color=drug_name))
p
p + scale_color_grey() + theme_classic()
p + scale_color_grey() + theme_classic()+scale_linetype_manual(values=c("twodash", "dotted"))
p + theme(legend.position="top")
p<-ggplot(test, aes(x=year, y=Freq, group=drug_name)) +
geom_line(aes(color=drug_name))+
geom_point(aes(color=drug_name))+
scale_linetype_manual(values=c("twodash", "dotted"))
p<-ggplot(test, aes(x=year, y=Freq, group=drug_name)) +
geom_line(aes(color=drug_name))+
geom_point(aes(color=drug_name))+
p<-ggplot(test, aes(x=year, y=Freq, group=drug_name)) +
geom_line(aes(color=drug_name))+
geom_point()+
scale_linetype_manual(values=c("twodash", "dotted"))
p<-ggplot(test, aes(x=year, y=Freq, group=drug_name)) +
geom_line(aes(color=drug_name))+
geom_point()+   scale_linetype_manual(values=c("twodash", "dotted"))
p + labs(title = paste('Direct/Indirect Visit Type for', unlist(strsplit(i, "_"))[1], "on", gsub("[^0-9]", "", i, ""), sep = " "),
x = 'Direct/Indirect Visit Type',
y = 'Visited Patient Number') +
theme(legend.text = element_text(colour="yellow", size = 6, face = "bold")) +
geom_text(size=3)
p + labs(title = 'test',
x = 'Direct/Indirect Visit Type',
y = 'Visited Patient Number') +
theme(legend.text = element_text(colour="yellow", size = 6, face = "bold")) +
geom_text(size=3)
p + labs(title = 'test',
x = 'Direct/Indirect Visit Type',
y = 'Visited Patient Number') +
theme(legend.text = element_text(colour="yellow", size = 6, face = "bold"))
p
p<-ggplot(test, aes(x=year, y=Freq, group=drug_name)) +geom_line(aes(color=drug_name))+
+     geom_point(aes(color=drug_name))
p <- ggplot(test, aes(x=year, y=Freq, group=drug_name, label=test[,3])) +geom_line(aes(color=drug_name))+geom_point(aes(color=drug_name))
p
p <- ggplot(test, aes(x=year, y=Freq, group=drug_name, label=test[,3])) +geom_line(aes(color=drug_name))+geom_point(aes(color=drug_name)) + geom_text(size=3)
p
p <- ggplot(test, aes(x=year, y=Freq, group=drug_name, label=test[,3])) +geom_line(aes(color=drug_name))+geom_point(aes(color=drug_name)) + geom_text(size=5)
p
p <- ggplot(test, aes(x=year, y=Freq, group=drug_name, label=test[,3])) +geom_line(aes(color=drug_name))+geom_point(aes(color=drug_name)) + geom_text(size=3.5)
p
p <- ggplot(test, aes(x=year, y=Freq, group=drug_name, label=test[,3])) +geom_line(aes(color=drug_name))+geom_point(aes(color=drug_name)) + geom_text(size=3.5) + labs(title = "Drug prevalence changed over years", x="Year", y ="Total Orders")
p
sum(test$Freq)
View(administration)
length(unique(administration$order_id))
View(orders)
View(orders2)
View(orders)
administration2 = administration
administration = read.xlsx("flatiron_qs_orders_admins_july_16.xlsx", 2)
View(administration)
library(lubridate)
install.packages("lubridate")
library(lubridate)
parse_date_time(x = administration$administered_date,
orders = c("d m y", "d B Y", "m/d/y"),
locale = "eng")
fmts <- c("%d-%b-%Y", "%Y-%m-%d")
fmts
d <- as.Date(as.numeric(apply(outer(administration$administered_date, fmts, as.Date), 1, na.omit)), "1970-01-01")
d
administration$administered_date <- as.Date(as.numeric(apply(outer(administration$administered_date, fmts, as.Date), 1, na.omit)), "1970-01-01")
View(administration)
is.na((administration))
library(xlsx)
orders = read.xlsx("flatiron_qs_orders_admins_july_16.xlsx", 1)
administration = read.xlsx("flatiron_qs_orders_admins_july_16.xlsx", 2)
demographics = read.xlsx("flatiron_qs_orders_admins_july_16.xlsx", 3)
patients = read.xlsx("flatiron_qs_orders_admins_july_16.xlsx", 4)
practices = read.xlsx("flatiron_qs_orders_admins_july_16.xlsx", 5)
orders = read.xlsx("flatiron_qs_orders_admins_july_16.xlsx", 1)
administration = read.xlsx("flatiron_qs_orders_admins_july_16.xlsx", 2)
demographics = read.xlsx("flatiron_qs_orders_admins_july_16.xlsx", 3)
patients = read.xlsx("flatiron_qs_orders_admins_july_16.xlsx", 4)
practices = read.xlsx("flatiron_qs_orders_admins_july_16.xlsx", 5)
View(orders)
orders[duplicated(orders)]
orders[duplicated(administration)]
orders[duplicated(demographics)]
demographics[duplicated(demographics)]
administration[duplicated(administration)]
patients[duplicated(patients)]
patients[duplicated(patients$patient_id)]
patients[duplicated(patients$patient_id), ]
orders[duplicated(orders), ]
practices[duplicated(practices$patient_id), ]
demographics[duplicated(demographics$patient_id), ]
orders[duplicated(orders), ]
View(practices)
orders[duplicated(orders$order_id), ]
administration[duplicated(administration$order_id), ]
demographics[duplicated(demographics$patient_id), ]
patients[duplicated(patients$patient_id), ]
practices[duplicated(practices), ]
View(patients2)
View(patients)
View(administration)
View(demographics)
View(patients)
View(practices)
orders2 = orders[, -5]
orders2$order_date <- as.Date(as.numeric(apply(outer(orders2$order_date, fmts, as.Date), 1, na.omit)), "1970-01-01")
View(orders2)
length(unique(orders2$patient_id))
dim(patients2)
dim(demographics2)
administration2 = administration
administration2$administered_date <- as.Date(as.numeric(apply(outer(administration2$administered_date, fmts, as.Date), 1, na.omit)), "1970-01-01")
dim(administration)
dim(administration2)
View(administration2)
is.na(administration2)
administration2[is.na(administration2)]
administration2[is.na(administration2), ]
patients2$diagnosis_date = as.Date(as.numeric(apply(outer(patients2$diagnosis_date, fmts, as.Date), 1, na.omit)), "1970-01-01")
patients2 = patients[!duplicated(patients$patient_id), ]
patients2$diagnosis_date = as.Date(as.numeric(apply(outer(patients2$diagnosis_date, fmts, as.Date), 1, na.omit)), "1970-01-01")
View(patients2)
patients2$advanced_diagnosis_date = as.Date(as.numeric(apply(outer(patients2$advanced_diagnosis_date, fmts, as.Date), 1, na.omit)), "1970-01-01")
View(patients2)
demographics2 = demographics[!duplicated(demographics$patient_id), ]
View(demographics2)
View(demographics2)
table(demographics2$race)
table(demographics2$gender)
table(demographics2$age)
length(unique(demographics2$patient_id))
dim(orders2)
dim(administration2)
length(unique(orders2$patient_id))
length(unique(administration2$patient_id))
administration2[duplicated(administration2$patient_id),]
unique(length(orders2$patient_id))
length(unique(orders2$patient_id))
length(unique(orders2$patient_id))
length(unique(administrations2$patient_id))
length(unique(administration2$patient_id))
setdiff(unique(administration2$patient_id), unique(orders2$patient_id))
setdiff(unique(orders2$patient_id), unique(administration2$patient_id))
setdiff(unique(orders2$patient_id), unique(patients2$patient_id))
setdiff(unique(administration2$patient_id), unique(patients2$patient_id))
setdiff(unique(patients2$patient_id),unique(administration2$patient_id))
setdiff(unique(patients2$patient_id),unique(orders2$patient_id))
length(unique(orders2$patient_id))
length(unique(administration2$patient_id))
length(unique(patients$patient_id))
length(unique(orders2$order_id))
length(unique(administration2$order_id))
orders2[is.na(orders2$order_date), ]
orders2[is.na(orders2), ]
administration2[is.na(administration2)]
administration2[is.na(administration2), ]
administration2[is.na(administration2$administered_date), ]
patients2[is.na(patients2), ]
patients2[is.na(patients2$diagnosis_date), ]
patients2[is.na(patients2$advanced_diagnosis_date), ]
practices[duplicated(practices)]
View(demographics2)
for(i in 1:nrow(demographics2)){
if((demographics2[i, 2]=="female"&demographics2[i, 4]=="NON_WHITE")|(demographics2[i, 2]=="male"&demographics2[i, 4]=="NON_WHITE" & demographics2[i, 3]>=70)|(demographics2[i, 2]=="unknown"&demographics2[i, 4]=="NON_WHITE" & demographics2[i, 3]>=70)){
demographics2[i, 5] = "High_Risk"
}
else if((demographics2[i, 2]=="female"&demographics2[i, 4]=="WHITE" & demographics2[i, 3]>=75)|(demographics2[i, 2]=="male"&demographics2[i, 4]=="NON_WHITE" & demographics2[i, 3]<70)){
demographics2[i, 5] = "Medium_Risk"
}
else if((demographics2[i, 2]=="female"&demographics2[i, 4]=="WHITE" & demographics2[i, 3]<75)|(demographics2[i, 2]=="male"&demographics2[i, 4]=="WHITE")|(demographics2[i, 2]=="unknown"&demographics2[i, 4]=="WHITE" & demographics2[i, 3]<75) ){
demographics2[i, 5] = "Low_Risk"
}
else if((demographics2[i, 2]=="unknown"&demographics2[i, 4]=="WHITE" & demographics2[i, 3]>=75)){
demographics2[i, 5] = "Medium_to_Low_Risk"
}
else if((demographics2[i, 2]=="unknown"&demographics2[i, 4]=="NON_WHITE" & demographics2[i, 3]<70)){
demographics2[i, 5] = "High_to_Medium_Risk"
}
}
View(demographics2)
table(demographics2$V5)
colnames(demographics2)[5] = 'Cancer_Risk_Level'
View(demographics2)
table(demographics2$Cancer_Risk_Level)
p
table(administration$drug_name)
str(administration2)
drug = data.frame(table(administration2$drug_name, administration2$administered_date))
View(drug)
administration2[,6] = format(administration[, 4], "%Y")
administration2[,6] = format(administration2[, 4], "%Y")
View(administration2)
str(administration2)
administration2[,6] = factor(administration2[,6 ])
colnames(administration2)[6] = 'year'
colnames(administration2)
drug = data.frame(table(administration2$drug_name, administration2$year))
View(drug)
table(administration2$drug_name, administration2$year)
colnames(drug) = c("drug_name", "year")
colnames(drug) = c("drug_name", "year", "Freq")
sum(drug$Freq)
sum(test$Freq)
ggplot(drug, aes(x=year, y=Freq, group=drug_name, label=drug[,3]))+ geom_line(aes(color=drug_name))+geom_point(aes(color=drug_name)) + geom_text(size=3.5) + labs(title = "Drug prevalence changed over years", x="Year", y ="Total Orders")
df1 = merge(patients2[, c(1,5,6)], administration2[,c(1,4)], by.x ="patient_id", by.y="patient_id")
View(df1)
df2 = merge(df1, demographics2, by.x="patient_id", by.y = "patient_id")
View(df2)
df2[with(df2, order(df2[,1], df2[, 4])), ]
df2 = df2[with(df2, order(df2[,1], df2[, 4])), ]
View(df2)
dim(df2)
df2[,9] = df2[,2] - df2[, 4]
View(df2)
df2[,9] = df2[,4] - df2[, 2]
View(df2)
mean(df2$V9)
mean(df2$V9, na.omit())
mean(df2$V9, na.omit(df2$V9))
mean(df2$V9, na.omit=T
)
?na.omit
df2 = df2[!duplicated(df2$diagnosis_date), ]
View(df2)
df2 = merge(df1, demographics2, by.x="patient_id", by.y = "patient_id")
df2 = df2[with(df2, order(df2[,1], df2[, 4])), ]
View(df2)
df2[,9] = df2[,4] - df2[, 2]
df2= df2[!is.na(df2$diagnosis_date), ]
View(df2)
mean(df2$V9)
length(unique(df2$patient_id))
for (i in unique(df2$patient_id)){
print i
}
for (i in unique(df2$patient_id)){
print (i)
}
dim(df2)
length(unique(df2$patient_id))
colnames(df2)
colnames(df2)[9] = "date_diff"
colnames(df2)
length(unique(df2$patient_id))[1]
length(unique(df2$patient_id))[2]
length(unique(df2$patient_id))[3]
length(unique(df2$patient_id))[[1]]
length(unique(df2$patient_id))[[2]]
unique(df2$patient_id)[1]
unique(df2$patient_id)[2]
unique(df2$patient_id)[3]
subdf2 = data.frame(matrix(nrow=length(unique(df2$patient_id)), ncol=3))
for (i in 1:length(unique(df2$patient_id))){
subdf2[i, 1] = unique(df2$patient_id)[i]
subdf2[i, 3] = min(subset(df2, df2$patient_id==i& df2$date_diff>=0)$date_diff)
subdf2[i, 2] = df2[df2$patient_id==unique(df2$patient_id)[i], 5]
}
for (i in 1:length(unique(df2$patient_id))){
subdf2[i, 1] = unique(df2$patient_id)[i]
subdf2[i, 3] = min(subset(df2, df2$patient_id==i& df2$date_diff>=0)$date_diff)
subdf2[i, 2] = df2[unique(df2$patient_id)[i], 5]
}
warnings()
View(subdf2)
View(subdf2)
1:length(unique(df2$patient_id))
unique(df2$patient_id)
unique(df2$patient_id)[97]
unique(df2$patient_id)[1]
subdf2 = data.frame(matrix(nrow=length(unique(df2$patient_id)), ncol=3))
for (i in 1:length(unique(df2$patient_id))){
subdf2[i, 1] = unique(df2$patient_id)[i]
subdf2[i, 3] = min(subset(df2, df2$patient_id==i& df2$date_diff>=0)$date_diff)
subdf2[i, 2] = demographics2[subdf2[i, 1], 2]
}
warnings()
for (i in 1:length(unique(df2$patient_id))){
subdf2[i, 1] = unique(df2$patient_id)[i]
subdf2[i, 3] = sort(subset(df2, df2$patient_id==i& df2$date_diff>=0)$date_diff)[1]
subdf2[i, 2] = demographics2[subdf2[i, 1], 2]
}
View(subdf2)
str(df2)
View(subdf2)
table(df2$patient_id)
subdf2 = data.frame(matrix(nrow=length(unique(df2$patient_id)), ncol=3))
subdf2[, 1] = unique(df2$patient_id)
View(subdf2)
for (i in 1:nrow(subdf2)){
subdf2[i, 3] = sort(subset(df2, df2$patient_id==i& df2$date_diff>=0)$date_diff)[1]
subdf2[i, 2] = demographics2[subdf2[i, 1], 2]
}
View(subdf2)
sort(subset(df2, df2$patient_id=="i"& df2$date_diff>=0)$date_diff)[1]
sort(subset(df2, df2$patient_id=="w7942e"& df2$date_diff>=0)$date_diff)[1]
for (i in 1:nrow(subdf2)){
subdf2[i, 3] = sort(subset(df2, df2$patient_id==subdf2[i,1]& df2$date_diff>=0)$date_diff)[1]
subdf2[i, 2] = demographics2[subdf2[i, 1], 2]
}
View(subdf2)
for (i in 1:nrow(subdf2)){
subdf2[i, 3] = sort(subset(df2, df2$patient_id==subdf2[i,1]& df2$date_diff>=0)$date_diff)[1]
subdf2[i, 2] = demographics2[demographics2$patient_id==subdf2[i, 1], 2]
}
View(subdf2)
for (i in 1:nrow(subdf2)){
subdf2[i, 3] = sort(subset(df2, df2$patient_id==subdf2[i,1] & df2$date_diff>=0)$date_diff)[1]
subdf2[i, 2] = subset(demographics2, demographics2$patient_id==subdf2[i,1])$gender
}
View(subdf2)
str(demographics2)
for (i in 1:nrow(subdf2)){
subdf2[i, 3] = sort(subset(df2, df2$patient_id==subdf2[i,1] & df2$date_diff>=0)$date_diff)[1]
subdf2[i, 2] = factor(subset(demographics2, demographics2$patient_id==subdf2[i,1])$gender)
}
str(demographics2)
str(demographics2)
View(subdf2)
str(df2)
for (i in 1:nrow(subdf2)){
subdf2[i, 3] = sort(subset(df2, df2$patient_id==subdf2[i,1] & df2$date_diff>=0)$date_diff)[1]
subdf2[i, 2] = subset(demographics2, demographics2$patient_id==subdf2[i,1])[,2]
}
View(subdf2)
?subset
for (i in 1:nrow(subdf2)){
subdf2[i, 3] = sort(subset(df2, df2$patient_id==subdf2[i,1] & df2$date_diff>=0)$date_diff)[1]
subdf2[i, 2] = character(subset(demographics2, demographics2$patient_id==subdf2[i,1], stringsasfactors=F)[,2])
}
subdf2 = data.frame(matrix(nrow=length(unique(df2$patient_id)), ncol=2))
subdf2[, 1] = unique(df2$patient_id)
for (i in 1:nrow(subdf2)){
subdf2[i, 2] = sort(subset(df2, df2$patient_id==subdf2[i,1] & df2$date_diff>=0)$date_diff)[1]
}
View(subdf2)
unique(df2)
unique(df2$patient_id)
merge(subdf2, demographics2[,1:2], by.x="X1", by.y="patient_id")
subdf2 = merge(subdf2, demographics2[,1:2], by.x="X1", by.y="patient_id")
colnames(subdf2) = colnames("patient_id", "date_diff", "gender")
dim(subdf2)
colnames(subdf2)
colnames(subdf2) = c("patient_id", "date_diff", "gender")
View(subdf2)
mean(subdf2$date_diff)
submale = subset(subdf2, gender=="male")
subfemale = subset(subdf2, gender=="female")
View(submale)
View(subfemale)
mean(submale$date_diff)
mean(subfemale$date_diff)
mean(subset(subdf2, gender=="male")$date_diff)
mean(subset(subdf2, gender=="female")$date_diff)
nivo = subset(administration2, year>=2012 & year<=2015 & drug_name == "nivolumab")
nivo = subset(administration2, year %in% c(2012, 2013, 2014, 2015) & drug_name == "nivolumab")
View(nivo)
dim(nivo)
length(unique(nivo$order_id))
length(unique(nivo$patient_id))
table(demographics2$Cancer_Risk_Level)
str(drug)
subset(drug, year>2015 )
subset(drug, numeric(year)>2015 )
subset(drug, integer(year)>2015 )
subset(drug, integer(drug$year)>2015 )
subset(drug, integer(drug$year) = 2015)
subset(drug, integer(drug$year) == 2015)
integer(drug$year)
character(drug$year)
drug$year
subset(drug, year %in% c(2005, 2009, 2010, 2011, 2012, 2013, 2014, 2015))
sum(subset(drug, year %in% c(2005, 2009, 2010, 2011, 2012, 2013, 2014, 2015))$Freq)
p = ggplot(drug, aes(x=year, y=Freq, group=drug_name, label=drug[,3]))+ geom_line(aes(color=drug_name))+geom_point(aes(color=drug_name)) + geom_text(size=3.5) + labs(title = "Drug prevalence changed over years", x="Year", y ="Total Orders")
p
drug = subset(drug, year %in% c(2005, 2009, 2010, 2011, 2012, 2013, 2014, 2015))
p = ggplot(drug, aes(x=year, y=Freq, group=drug_name, label=drug[,3]))+ geom_line(aes(color=drug_name))+geom_point(aes(color=drug_name)) + geom_text(size=3.5) + labs(title = "Drug prevalence changed over years", x="Year", y ="Total Orders")
p
df1 = merge(patients2[, c(1,5,6)], administration2[,c(1,4)], by.x ="patient_id", by.y="patient_id")
df2 = merge(df1, demographics2, by.x="patient_id", by.y = "patient_id")
df2 = df2[with(df2, order(df2[,1], df2[, 4])), ]
df2[,9] = df2[,4] - df2[, 2]
colnames(df2)[9] = "date_diff" ## observed from the merged table df2, there do exist cases where the first administered_date is before the initial diagnose date. Under such case, I will use the earlist administered_date after initial diagnose date for a patient.
df2= df2[!is.na(df2$diagnosis_date), ] ## remove the NAs contained in diagnosis_date column.
dim(df2)
subdf2 = data.frame(matrix(nrow=length(unique(df2$patient_id)), ncol=2))#initialize an empty data frame
subdf2[, 1] = unique(df2$patient_id)
for (i in 1:nrow(subdf2)){
subdf2[i, 2] = sort(subset(df2, df2$patient_id==subdf2[i,1] & df2$date_diff>=0)$date_diff)[1] # to apply the smallest positive different days for each patient.
}
subdf2 = merge(subdf2, demographics2[,1:2], by.x="X1", by.y="patient_id")
colnames(subdf2) = c("patient_id", "date_diff", "gender")
mean(subfemale$date_diff)#14025.56
mean(subset(subdf2, gender=="male")$date_diff)#12693.5
mean(subset(subdf2, gender=="female")$date_diff)#15114.65
rm(ls = all)
rm(ls())
rm(list = all)
>rm()
?rm
>rm(list = ls())
rm(list = ls())
nivo = subset(administration2, year %in% c(2012, 2013, 2014, 2015) & drug_name == "nivolumab")
drug2 = subset(drug, year %in% c(2005, 2009, 2010, 2011, 2012, 2013, 2014, 2015))
